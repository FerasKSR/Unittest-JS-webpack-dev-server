name: webpack-dev-server

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack ${{ matrix.webpack-version }} (${{ matrix.shard }})

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [23.x]
        shard: ["4/4"]
        webpack-version: [latest]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: test-${{ matrix.os }}-v${{ matrix.node-version }}-${{ matrix.webpack-version }}-${{ matrix.shard }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies for Node.js@18
        run: |
          npm i p-retry@^4.5.0 open@^8.0.9
          node ./scripts/prepare-test-for-old-node.js
        if: matrix.node-version == '18.x'

      - name: Setup firefox
        if: matrix.os != 'windows-latest'
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: latest

      - name: Link webpack-dev-server
        run: |
          cp -R client tmp-client
          npm link --ignore-scripts || true
          npm link webpack-dev-server --ignore-scripts || true
          rm -r client
          cp -R tmp-client client

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: node_modules/.bin/jest --coverage --ci --shard=${{ matrix.shard }}
        if: matrix.node-version == '18.x'

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: npm run test:coverage -- --ci --shard=${{ matrix.shard }}
        if: matrix.node-version != '18.x'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./coverage
